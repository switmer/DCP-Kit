{
  "name": "fixtures",
  "version": "1.0.0",
  "description": "DCP registry extracted from /Users/stevewitmer/local_AI_Projects/DCP-Transformer/packages/dcp-toolkit/tests/unit/fixtures",
  "components": [
    {
      "name": "SimpleButton",
      "description": "SimpleButton component",
      "category": "actions",
      "props": {
        "variant": {
          "type": "enum",
          "description": "Button variant",
          "required": true,
          "source": "auto"
        },
        "children": {
          "type": "object",
          "description": "Button content",
          "required": true,
          "source": "auto"
        },
        "onClick": {
          "type": "object",
          "description": "Click handler",
          "required": true,
          "source": "auto"
        }
      },
      "variants": {},
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/simple-button.tsx",
        "componentType": "arrow",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:36.637Z",
        "tsMorphAnalysis": true,
        "typescriptAnalysis": true
      }
    },
    {
      "name": "SimpleButton",
      "description": "SimpleButton component",
      "category": "actions",
      "props": {},
      "variants": {},
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/simple-button.js",
        "componentType": "arrow",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:39.817Z"
      }
    },
    {
      "name": "ProblematicComponent",
      "description": "ProblematicComponent component",
      "category": "components",
      "props": {
        "__index": {
          "type": "object",
          "description": "",
          "required": true,
          "source": "auto"
        },
        "id": {
          "type": "string",
          "description": "",
          "required": true,
          "source": "auto"
        },
        "variant": {
          "type": "string",
          "description": "",
          "required": true,
          "source": "auto"
        },
        "onComplexEvent": {
          "type": "string",
          "description": "",
          "required": true,
          "source": "auto"
        },
        "data": {
          "type": "string",
          "description": "",
          "required": true,
          "source": "auto"
        },
        "computed": {
          "type": "string",
          "description": "",
          "required": true,
          "source": "auto"
        }
      },
      "variants": {},
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/problematic-component.tsx",
        "componentType": "arrow",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:39.827Z",
        "tsMorphAnalysis": true,
        "typescriptAnalysis": true
      }
    },
    {
      "name": "NoPropsInterface",
      "description": "NoPropsInterface component",
      "category": "components",
      "props": {},
      "variants": {},
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/problematic-component.tsx",
        "componentType": "arrow",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:39.828Z"
      }
    },
    {
      "name": "ProblematicComponent",
      "description": "ProblematicComponent component",
      "category": "components",
      "props": {},
      "variants": {},
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/problematic-component.js",
        "componentType": "arrow",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:41.070Z"
      }
    },
    {
      "name": "ClassComponent",
      "description": "ClassComponent component",
      "category": "components",
      "props": {},
      "variants": {},
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/problematic-component.js",
        "componentType": "function",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:41.072Z"
      }
    },
    {
      "name": "NoPropsInterface",
      "description": "NoPropsInterface component",
      "category": "components",
      "props": {},
      "variants": {},
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/problematic-component.js",
        "componentType": "arrow",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:41.074Z"
      }
    },
    {
      "name": "ComplexCard",
      "description": "ComplexCard component",
      "category": "layout",
      "props": {
        "variant": {
          "type": "enum",
          "description": "Card variant with multiple options",
          "required": true,
          "source": "auto"
        },
        "size": {
          "type": "enum",
          "description": "Card size",
          "required": true,
          "source": "auto"
        },
        "interactive": {
          "type": "boolean",
          "description": "Whether card is interactive",
          "required": true,
          "source": "auto"
        },
        "className": {
          "type": "string",
          "description": "Custom styling",
          "required": true,
          "source": "auto"
        },
        "children": {
          "type": "object",
          "description": "Card content",
          "required": true,
          "source": "auto"
        },
        "header": {
          "type": "object",
          "description": "Optional header slot",
          "required": true,
          "source": "auto"
        },
        "footer": {
          "type": "object",
          "description": "Optional footer slot",
          "required": true,
          "source": "auto"
        },
        "actions": {
          "type": "string",
          "description": "Optional actions",
          "required": true,
          "source": "auto"
        },
        "loading": {
          "type": "boolean",
          "description": "Loading state",
          "required": true,
          "source": "auto"
        },
        "disabled": {
          "type": "boolean",
          "description": "Disabled state",
          "required": true,
          "source": "auto"
        },
        "onClick": {
          "type": "object",
          "description": "Click handler for interactive cards",
          "required": true,
          "source": "auto"
        },
        "data-testid": {
          "type": "string",
          "description": "Additional data attributes",
          "required": true,
          "source": "auto"
        }
      },
      "variants": {},
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/complex-card.tsx",
        "componentType": "arrow",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:41.087Z",
        "tsMorphAnalysis": true,
        "typescriptAnalysis": true
      }
    },
    {
      "name": "ComplexCard",
      "description": "ComplexCard component",
      "category": "layout",
      "props": {},
      "variants": {},
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/complex-card.js",
        "componentType": "arrow",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:42.197Z"
      }
    },
    {
      "name": "Button",
      "description": "Button component",
      "category": "actions",
      "props": {
        "asChild": {
          "type": "boolean",
          "description": "",
          "required": true,
          "source": "auto"
        }
      },
      "variants": {
        "variant": [
          "default",
          "destructive",
          "outline",
          "secondary",
          "ghost",
          "link"
        ],
        "size": [
          "default",
          "sm",
          "lg",
          "icon"
        ]
      },
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/shadcn/button.tsx",
        "componentType": "forwardRef",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:42.224Z",
        "tsMorphAnalysis": true,
        "typescriptAnalysis": true
      }
    },
    {
      "name": "Button",
      "description": "Button component",
      "category": "actions",
      "props": {
        "variant": {
          "type": "enum",
          "description": "Button variation style",
          "required": true,
          "source": "auto"
        },
        "size": {
          "type": "enum",
          "description": "Button size",
          "required": true,
          "source": "auto"
        },
        "disabled": {
          "type": "boolean",
          "description": "Whether the button is disabled",
          "required": true,
          "source": "auto"
        },
        "children": {
          "type": "object",
          "description": "Button contents",
          "required": true,
          "source": "auto"
        },
        "onClick": {
          "type": "object",
          "description": "Optional click handler",
          "required": true,
          "source": "auto"
        }
      },
      "variants": {},
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/src/components/Button.tsx",
        "componentType": "arrow",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:43.158Z",
        "tsMorphAnalysis": true,
        "typescriptAnalysis": true
      }
    },
    {
      "name": "Button",
      "description": "Button component",
      "category": "actions",
      "props": {},
      "variants": {},
      "composition": {
        "slots": [],
        "subComponents": []
      },
      "examples": [],
      "extensions": {
        "filePath": "tests/unit/fixtures/src/components/Button.js",
        "componentType": "arrow",
        "adaptor": "react-tsx",
        "extractedAt": "2025-07-26T04:21:43.720Z"
      }
    }
  ],
  "tokens": {},
  "themeContext": {
    "config": null,
    "cssVariables": {
      "light": {},
      "dark": {},
      "custom": {}
    },
    "summary": "Theme Configuration: None detected\n- No theme configuration file found\n- No CSS variables extracted\n"
  },
  "metadata": {
    "extractedAt": "2025-07-26T04:21:36.488Z",
    "sourceDir": "/Users/stevewitmer/local_AI_Projects/DCP-Transformer/packages/dcp-toolkit/tests/unit/fixtures",
    "transformedFrom": "multi-framework",
    "version": "3.0.0",
    "adaptorRegistry": [
      "react-tsx",
      "shadcn-react-tsx"
    ]
  },
  "lastModified": "2025-07-26T04:21:43.721Z",
  "intelligence": {
    "projectStructure": {
      "detectedPaths": {
        "components": {
          "path": "src/components",
          "count": 3,
          "structure": [
            "src/components",
            "src/components/Button.tsx",
            "src/components/Button.js"
          ]
        }
      },
      "aliases": [],
      "conventions": {
        "framework": "unknown",
        "styling": [],
        "testing": "unknown",
        "bundler": "unknown",
        "features": []
      },
      "recommendations": []
    },
    "environment": {
      "configFiles": {
        "tsconfig.json": {
          "exists": true,
          "path": "/Users/stevewitmer/local_AI_Projects/DCP-Transformer/packages/dcp-toolkit/tests/unit/fixtures/tsconfig.json"
        }
      },
      "missingFiles": [
        "package.json",
        "tailwind.config.js",
        "tailwind.config.ts",
        "components.json",
        "next.config.js",
        "vite.config.js",
        ".eslintrc.json",
        "prettier.config.js"
      ],
      "nodeVersion": null,
      "packageManager": "npm"
    },
    "dependencies": {
      "required": [],
      "missing": [
        "package.json"
      ],
      "versions": {},
      "graph": {},
      "suggestions": []
    },
    "assets": {
      "imageProps": [],
      "iconUsage": [],
      "missingAssets": [],
      "recommendations": [
        "Use consistent image sizing (32x32, 64x64, etc.)",
        "Provide fallback images for missing avatars",
        "Consider using next/image for optimized loading",
        "Use SVG icons for better scalability"
      ]
    },
    "setupInstructions": [
      "Install missing dependencies: npm install package.json",
      "Initialize ShadCN: npx shadcn-ui@latest init"
    ],
    "integrationChecklist": [
      "✅ Components directory structure detected",
      "❌ Install React",
      "❌ Initialize package.json",
      "⚠️ Verify all image assets are provided",
      "⚠️ Test responsive behavior across breakpoints",
      "⚠️ Validate accessibility requirements"
    ],
    "intelligence": {
      "confidence": 10,
      "readiness": "needs-setup",
      "complexity": "high",
      "recommendations": [
        "Add path aliases to tsconfig.json for cleaner imports",
        "Consider Tailwind CSS for utility-first styling",
        "Add testing framework (Jest or Vitest)"
      ]
    }
  }
}